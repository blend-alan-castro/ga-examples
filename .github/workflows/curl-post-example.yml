name: Curl POST Request Example

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  curl-post:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Make POST request with curl
      run: |
        echo "üîê Testing Authentication Status endpoint..."
        response=$(curl -s -w "\nHTTP_STATUS:%{http_code}\n" -X POST \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ secrets.API_TOKEN }}" \
          -d '{
            "message": "GitHub Action triggered",
            "repository": "${{ github.repository }}",
            "branch": "${{ github.ref_name }}",
            "commit": "${{ github.sha }}",
            "actor": "${{ github.actor }}",
            "event": "${{ github.event_name }}"
          }' \
          "${{ secrets.API_ENDPOINT || 'https://api.beta.blendlabs.com/authentication-status' }}")
        
        # Extract HTTP status and response body
        http_status=$(echo "$response" | grep "HTTP_STATUS:" | cut -d: -f2)
        response_body=$(echo "$response" | sed '/HTTP_STATUS:/d')
        
        echo "üìä Response Status: $http_status"
        echo "üìÑ Response Body: $response_body"
        
        # Check if request was successful
        if [ "$http_status" -ge 200 ] && [ "$http_status" -lt 300 ]; then
          echo "‚úÖ Request successful!"
        else
          echo "‚ùå Request failed with status $http_status"
          echo "Response: $response_body"
          exit 1
        fi
        
        # Check for error messages in response body
        if echo "$response_body" | grep -q '"error"'; then
          echo "‚ùå API returned an error: $response_body"
          exit 1
        fi
          
    - name: POST with form data
      run: |
        echo "üìã Testing Closings endpoint with form data..."
        response=$(curl -s -w "\nHTTP_STATUS:%{http_code}\n" -X POST \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -H "Authorization: Bearer ${{ secrets.API_TOKEN }}" \
          -d "name=GitHub Action&status=success&timestamp=$(date -u +%Y-%m-%dT%H:%M:%SZ)&repository=${{ github.repository }}" \
          "${{ secrets.FORM_ENDPOINT || 'https://api.beta.blendlabs.com/close/closings?applicationId=aa9fdaa2-7bf3-4411-a836-c2a46117f5c3' }}")
        
        # Extract HTTP status and response body
        http_status=$(echo "$response" | grep "HTTP_STATUS:" | cut -d: -f2)
        response_body=$(echo "$response" | sed '/HTTP_STATUS:/d')
        
        echo "üìä Response Status: $http_status"
        echo "üìÑ Response Body: $response_body"
        
        # Check if request was successful
        if [ "$http_status" -ge 200 ] && [ "$http_status" -lt 300 ]; then
          echo "‚úÖ Form data request successful!"
        else
          echo "‚ùå Form data request failed with status $http_status"
          echo "Response: $response_body"
          exit 1
        fi
        
        # Check for error messages in response body
        if echo "$response_body" | grep -q '"error"'; then
          echo "‚ùå API returned an error: $response_body"
          exit 1
        fi
          
    - name: Test JSON POST to Closings endpoint
      run: |
        echo "üìã Testing Closings endpoint with JSON data..."
        response=$(curl -s -w "\nHTTP_STATUS:%{http_code}\n" -X POST \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ secrets.API_TOKEN }}" \
          -d '{
            "message": "GitHub Action test for closings",
            "repository": "${{ github.repository }}",
            "branch": "${{ github.ref_name }}",
            "commit": "${{ github.sha }}",
            "actor": "${{ github.actor }}",
            "event": "${{ github.event_name }}",
            "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'",
            "applicationId": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3"
          }' \
          "${{ secrets.CLOSINGS_ENDPOINT || 'https://api.beta.blendlabs.com/close/closings?applicationId=aa9fdaa2-7bf3-4411-a836-c2a46117f5c3' }}")
        
        # Extract HTTP status and response body
        http_status=$(echo "$response" | grep "HTTP_STATUS:" | cut -d: -f2)
        response_body=$(echo "$response" | sed '/HTTP_STATUS:/d')
        
        echo "üìä Response Status: $http_status"
        echo "üìÑ Response Body: $response_body"
        
        # Check if request was successful
        if [ "$http_status" -ge 200 ] && [ "$http_status" -lt 300 ]; then
          echo "‚úÖ JSON request to closings successful!"
        else
          echo "‚ùå JSON request to closings failed with status $http_status"
          echo "Response: $response_body"
          exit 1
        fi
        
        # Check for error messages in response body
        if echo "$response_body" | grep -q '"error"'; then
          echo "‚ùå API returned an error: $response_body"
          exit 1
        fi
