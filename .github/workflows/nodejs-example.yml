name: Node.js POST Request Example

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  nodejs-post:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm init -y && npm install axios
      
    - name: Make GET request with Node.js to Authentication Status endpoint
      run: |
        node -e "
        const axios = require('axios');
        
        async function makeGetRequest() {
          try {
            const response = await axios.get('${{ secrets.API_ENDPOINT }}/authentication-status', {
              headers: {
                'Authorization': 'Bearer ${{ secrets.API_TOKEN }}',
                'blend-target-instance': '${{ secrets.TENANT }}'
              }
            });
            
            console.log('Response status:', response.status);
            console.log('Response data:', response.data);
            
            // Check for error messages in response
            if (response.data && response.data.error) {
              console.error('❌ API returned an error:', response.data);
              process.exit(1);
            }
          } catch (error) {
            console.error('Error:', error.message);
            if (error.response) {
              console.error('Response status:', error.response.status);
              console.error('Response data:', error.response.data);
            }
            process.exit(1);
          }
        }
        
        makeGetRequest();
        "
        
    - name: Make GET request with Node.js to Closings endpoint
      run: |
        node -e "
        async function makeGetRequest() {
          try {
            const response = await axios.get('${{ secrets.API_ENDPOINT }}/close/closings?applicationId=aa9fdaa2-7bf3-4411-a836-c2a46117f5c3', {
              headers: {
                'Authorization': 'Bearer ${{ secrets.API_TOKEN }}',
                'blend-target-instance': '${{ secrets.TENANT }}'
              }
            });
            
            console.log('Response status:', response.status);
            console.log('Response data:', response.data);
            
            // Check for error messages in response
            if (response.data && response.data.error) {
              console.error('❌ API returned an error:', response.data);
              process.exit(1);
            }
          } catch (error) {
            console.error('Error:', error.message);
            process.exit(1);
          }
        }
        
        makeGetRequest();
        "
