name: Test Blend Labs API Endpoints

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  test-blend-apis:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Test Authentication Status Endpoint
      run: |
        echo "üîê Testing Authentication Status endpoint..."
        echo "üìç Using endpoint: ${{ secrets.API_ENDPOINT }}/authentication-status"
        response=$(curl -s -w "\nHTTP_STATUS:%{http_code}\n" -X GET \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ secrets.API_TOKEN }}" \
          -H "blend-target-instance: ${{ secrets.TENANT }}" \
          "${{ secrets.API_ENDPOINT }}/authentication-status")
        
        # Extract HTTP status and response body
        http_status=$(echo "$response" | grep "HTTP_STATUS:" | cut -d: -f2)
        response_body=$(echo "$response" | sed '/HTTP_STATUS:/d')
        
        echo "üìä Response Status: $http_status"
        echo "üìÑ Response Body: $response_body"
        
        # Check if request was successful
        if [ "$http_status" -ge 200 ] && [ "$http_status" -lt 300 ]; then
          echo "‚úÖ Authentication Status request successful!"
        else
          echo "‚ùå Authentication Status request failed with status $http_status"
          echo "Response: $response_body"
          exit 1
        fi
        
        # Check for error messages in response body
        if echo "$response_body" | grep -q '"error"'; then
          echo "‚ùå API returned an error: $response_body"
          exit 1
        fi
          
    - name: Test Closings Endpoint
      run: |
        echo "üìã Testing Closings endpoint..."
        echo "üìç Using endpoint: ${{ secrets.API_ENDPOINT }}/close/closings?applicationId=aa9fdaa2-7bf3-4411-a836-c2a46117f5c3"
        response=$(curl -s -w "\nHTTP_STATUS:%{http_code}\n" -X GET \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ secrets.API_TOKEN }}" \
          -H "blend-target-instance: ${{ secrets.TENANT }}" \
          "${{ secrets.API_ENDPOINT }}/close/closings?applicationId=aa9fdaa2-7bf3-4411-a836-c2a46117f5c3")
        
        # Extract HTTP status and response body
        http_status=$(echo "$response" | grep "HTTP_STATUS:" | cut -d: -f2)
        response_body=$(echo "$response" | sed '/HTTP_STATUS:/d')
        
        echo "üìä Response Status: $http_status"
        echo "üìÑ Response Body: $response_body"
        
        # Check if request was successful
        if [ "$http_status" -ge 200 ] && [ "$http_status" -lt 300 ]; then
          echo "‚úÖ Closings request successful!"
        else
          echo "‚ùå Closings request failed with status $http_status"
          echo "Response: $response_body"
          exit 1
        fi
        
        # Check for error messages in response body
        if echo "$response_body" | grep -q '"error"'; then
          echo "‚ùå API returned an error: $response_body"
          exit 1
        fi

    - name: Test Applications Endpoint
      run: |
        echo "üìã Testing Applications endpoint..."
        echo "üìç Using endpoint: ${{ secrets.API_ENDPOINT }}/home-lending/applications"
        response=$(curl -s -w "\nHTTP_STATUS:%{http_code}\n" -X POST \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ secrets.API_TOKEN }}" \
          -H "blend-target-instance: ${{ secrets.TENANT }}" \
          -d '{
            "solutionSubType": "MORTGAGE",
            "party": {
              "name": {
                "firstName": "Alan ",
                "lastName": "Test GA"
              },
              "taxpayerIdentifier": {
                "type": "SOCIAL_SECURITY_NUMBER",
                "value": "000113933"
              },
              "email": "alan-castro+athenaai@blend.com",
              "dateOfBirth": "1995-10-03T20:07:27+00:00"
            },
            "redirect": true,
            "sendEmailInvite": true,
            "applicationSource": {
              "type": "LOS"
            },
            "applicationExperienceType": "FULL_APPLICATION",
            "loanPurposeType": "PURCHASE",
            "locPurposeType": "HOME_PURCHASE",
            "homeEquityLoanPurposeType": "HOME_PURCHASE",
            "lienPriorityType": "FIRST_LIEN",
            "paymentType": "INTEREST_ONLY",
            "loanAmount": 100000,
            "communityId": "12345",
            "leadId": "leadId1",
            "crmId": "crmLead1",
            "losId": "Loan-12391",
            "referenceNumber": 124123,
            "applicationTemplateId": "fd658b97-f901-4b14-b693-4654d276c909",
            "appSource": "ORGANIC_LEAD",
            "interestRate": 4.25,
            "mortgageType": "CONVENTIONAL",
            "branchIdOverride": "12345"
          }' \
          "${{ secrets.API_ENDPOINT }}/home-lending/applications")
        
        # Extract HTTP status and response body
        http_status=$(echo "$response" | grep "HTTP_STATUS:" | cut -d: -f2)
        response_body=$(echo "$response" | sed '/HTTP_STATUS:/d')
        
        echo "üìä Response Status: $http_status"
        echo "üìÑ Response Body: $response_body"
        
        # Check if request was successful
        if [ "$http_status" -ge 200 ] && [ "$http_status" -lt 300 ]; then
          echo "‚úÖ Applications request successful!"
        else
          echo "‚ùå Applications request failed with status $http_status"
          echo "Response: $response_body"
          exit 1
        fi
        
        # Check for error messages in response body
        if echo "$response_body" | grep -q '"error"'; then
          echo "‚ùå API returned an error: $response_body"
          exit 1
        fi

    - name: Test Closing Upsert Endpoint
      run: |
        echo "üîí Testing Closing Upsert endpoint..."
        echo "üìç Using endpoint: ${{ secrets.API_ENDPOINT }}/close/closings"
        response=$(curl -s -w "\nHTTP_STATUS:%{http_code}\n" -X PUT \
          -H "Content-Type: application/json" \
          -H "accept: application/json; charset=utf-8" \
          -H "Authorization: Bearer ${{ secrets.API_TOKEN }}" \
          -H "blend-api-version: 10.0.0" \
          -H "blend-target-instance: ${{ secrets.TENANT }}" \
          -H "cache-control: no-cache" \
          -d '{
            "closingParties": [
              {
                "email": "alan-castro+sa@blend.com",
                "firstName": "Alan",
                "lastName": "SA",
                "partyType": "SETTLEMENT"
              }
            ],
            "applicationId": "4c77ef2b-5c13-42fd-96c7-a811996795e2",
            "closingType": "HYBRID",
            "closingStart": "2025-10-29T00:00:00-04:00",
            "closingEnd": "2025-10-30T00:00:00-04:00",
            "scheduledCeremonyTime": "2025-10-29T00:00:00-04:00",
            "timezone": "America/New_York"
          }' \
          "${{ secrets.API_ENDPOINT }}/close/closings")
        
        # Extract HTTP status and response body
        http_status=$(echo "$response" | grep "HTTP_STATUS:" | cut -d: -f2)
        response_body=$(echo "$response" | sed '/HTTP_STATUS:/d')
        
        echo "üìä Response Status: $http_status"
        echo "üìÑ Response Body: $response_body"
        
        # Check if request was successful
        if [ "$http_status" -ge 200 ] && [ "$http_status" -lt 300 ]; then
          echo "‚úÖ Closing upsert request successful!"
        else
          echo "‚ùå Closing upsert request failed with status $http_status"
          echo "Response: $response_body"
          exit 1
        fi
        
        # Check for error messages in response body
        if echo "$response_body" | grep -q '"error"'; then
          echo "‚ùå API returned an error: $response_body"
          exit 1
        fi